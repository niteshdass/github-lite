{"remainingRequest":"/home/nitesh/Music/git-lite/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nitesh/Music/git-lite/src/components/LoadingBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nitesh/Music/git-lite/src/components/LoadingBar.vue","mtime":1635985869000},{"path":"/home/nitesh/Music/git-lite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nitesh/Music/git-lite/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/nitesh/Music/git-lite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nitesh/Music/git-lite/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IENFTlRFUl9YID0gNTAKY29uc3QgQ0VOVEVSX1kgPSA1MApjb25zdCBSQURJVVMgPSAyMAoKZnVuY3Rpb24gcG9zaXRpb25PbkNpcmNsZSAocmFkaXVzLCBhbmdsZSwgY2VudGVyKSB7CiAgcmV0dXJuIHsKICAgIHg6IGNlbnRlci54ICsgKHJhZGl1cyAqIE1hdGguY29zKHRvUmFkaWFucyhhbmdsZSkpKSwKICAgIHk6IGNlbnRlci55ICsgKHJhZGl1cyAqIE1hdGguc2luKHRvUmFkaWFucyhhbmdsZSkpKQogIH0KfQoKZnVuY3Rpb24gdG9SYWRpYW5zIChhbmdsZSkgewogIHJldHVybiBhbmdsZSAqIE1hdGguUEkgLyAxODAKfTsKCmZ1bmN0aW9uIGNhbGN1bGF0ZVBvc2l0aW9ucyAoY29tcG9uZW50KSB7CiAgY29uc3QgYW5nbGVJbmNyZW1lbnQgPSAzNjAgLyBjb21wb25lbnQuY2lyY2xlcy5sZW5ndGgKICBjb25zdCBwb3NpdGlvbnMgPSB7fQogIGNvbXBvbmVudC5jaXJjbGVzLmZvckVhY2goKGNpcmNsZSwgaW5kZXgpID0+IHsKICAgIHBvc2l0aW9uc1tpbmRleF0gPSBwb3NpdGlvbk9uQ2lyY2xlKAogICAgICBSQURJVVMsCiAgICAgIGFuZ2xlSW5jcmVtZW50ICogaW5kZXgsCiAgICAgIHsgeDogQ0VOVEVSX1gsIHk6IENFTlRFUl9ZIH0KICAgICkKICB9KQogIHJldHVybiBwb3NpdGlvbnMKfQoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgY2lyY2xlczogWwogICAgICAgIHsgY29sb3I6ICcjRTBGMkYxJywgcmFkaXVzOiAwIH0sCiAgICAgICAgeyBjb2xvcjogJyNCMkRGREInLCByYWRpdXM6IDAgfSwKICAgICAgICB7IGNvbG9yOiAnIzgwQ0JDNCcsIHJhZGl1czogMCB9LAogICAgICAgIHsgY29sb3I6ICcjNERCNkFDJywgcmFkaXVzOiAwIH0sCiAgICAgICAgeyBjb2xvcjogJyMyNkE2OUEnLCByYWRpdXM6IDAgfSwKICAgICAgICB7IGNvbG9yOiAnIzAwODk3QicsIHJhZGl1czogMCB9LAogICAgICAgIHsgY29sb3I6ICcjMDA3OTZCJywgcmFkaXVzOiAwIH0sCiAgICAgICAgeyBjb2xvcjogJyMwMDY5NUMnLCByYWRpdXM6IDAgfSwKICAgICAgICB7IGNvbG9yOiAnIzAwNEQ0MCcsIHJhZGl1czogMCB9CiAgICAgIF0sCiAgICAgIGNvdW50ZXI6IDAsCiAgICAgIGludGVydmFsOiBudWxsCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgY2lyY2xlUG9zaXRpb25zOiBjYWxjdWxhdGVQb3NpdGlvbnMKICB9LAogIGNyZWF0ZWQgKCkgewogICAgdGhpcy5pbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHsKICAgICAgdGhpcy5jb3VudGVyKysKICAgICAgdGhpcy5jaXJjbGVzID0gdGhpcy5jaXJjbGVzLm1hcCgoaXRlbSwgaW5kZXgpID0+ICh7CiAgICAgICAgLi4uaXRlbSwKICAgICAgICByYWRpdXM6ICh0aGlzLmNvdW50ZXIgKyBpbmRleCkgJSA4CiAgICAgIH0pKQogICAgfSwgNzApCiAgfSwKICBkZXN0cm95ZWQgKCkgewogICAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKQogIH0KfQo="},{"version":3,"sources":["LoadingBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LoadingBar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <svg class=\"loading-spinner\">\n    <circle\n      :cx=\"circlePositions[index] && circlePositions[index].x\"\n      :cy=\"circlePositions[index] && circlePositions[index].y\"\n      :r=\"item.radius\"\n      :fill=\"item.color\"\n      v-for=\"(item, index) in circles\"\n      :key=\"index\"/>\n  </svg>\n</template>\n\n<script>\nconst CENTER_X = 50\nconst CENTER_Y = 50\nconst RADIUS = 20\n\nfunction positionOnCircle (radius, angle, center) {\n  return {\n    x: center.x + (radius * Math.cos(toRadians(angle))),\n    y: center.y + (radius * Math.sin(toRadians(angle)))\n  }\n}\n\nfunction toRadians (angle) {\n  return angle * Math.PI / 180\n};\n\nfunction calculatePositions (component) {\n  const angleIncrement = 360 / component.circles.length\n  const positions = {}\n  component.circles.forEach((circle, index) => {\n    positions[index] = positionOnCircle(\n      RADIUS,\n      angleIncrement * index,\n      { x: CENTER_X, y: CENTER_Y }\n    )\n  })\n  return positions\n}\n\nexport default {\n  data () {\n    return {\n      circles: [\n        { color: '#E0F2F1', radius: 0 },\n        { color: '#B2DFDB', radius: 0 },\n        { color: '#80CBC4', radius: 0 },\n        { color: '#4DB6AC', radius: 0 },\n        { color: '#26A69A', radius: 0 },\n        { color: '#00897B', radius: 0 },\n        { color: '#00796B', radius: 0 },\n        { color: '#00695C', radius: 0 },\n        { color: '#004D40', radius: 0 }\n      ],\n      counter: 0,\n      interval: null\n    }\n  },\n  computed: {\n    circlePositions: calculatePositions\n  },\n  created () {\n    this.interval = setInterval(() => {\n      this.counter++\n      this.circles = this.circles.map((item, index) => ({\n        ...item,\n        radius: (this.counter + index) % 8\n      }))\n    }, 70)\n  },\n  destroyed () {\n    clearInterval(this.interval)\n  }\n}\n</script>\n\n<style scoped>\n.loading-spinner {\n  width: 200px;\n  height: 200px;\n  margin-left: 48%;\n  margin-top: 20%;\n}\n</style>\n"]}]}